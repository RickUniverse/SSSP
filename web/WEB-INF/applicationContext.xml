<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Spring IOC -->
    <!--配置排除扫描的包-->
    <context:component-scan base-package="com.sssp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--配置数据源-->
    <context:property-placeholder location="/WEB-INF/db.properties"/>

    <!--必须组件扫描不然无法创建PersonRepository-->
    <!--不知道为什么不加组件扫描就会失败。。。。。。。。-->
    <!--好像是为了让Spring识别并生成代理实现类放入ioc容器中-->
<!--    <context:component-scan base-package="com.sssp.service"/>-->

    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="user" value="${jdbc.user}"/>
    </bean>

    <!--2.配置JPA的EntityManagerFactory-->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.sssp"/>
        <property name="jpaProperties">
            <props>
                <!--二級緩存相关-->
                <!--                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.internal.EhcacheRegionFactory</prop>-->
                <!--                <prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>-->
                <!--生成数据表列的映射策略-->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!--hibernate基本属性-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>

                <!--启用二级缓存-->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <!--二级缓存技术提供者-->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.internal.EhcacheRegionFactory</prop>
                <!--查询缓存-->
                <prop key="hibernate.cache.use_query_cache">true</prop>
            </props>
        </property>
        <!--配置二级缓存的策略
        ENABLE_SELECTIVE : @Cacheable 添加了该注解的entity类被缓存
        -->
        <property name="sharedCacheMode" value="ENABLE_SELECTIVE"/>
    </bean>

    <!--3，配置事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--4，配置支持注解的事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--5，配置SpringData-->
    <!--6,加入jpa命名空间-->
    <!--base-package 扫描Respository bean 所在的包-->
    <!--自定义的Respository 必须放在 base-package 规定的 com.springdata.repository 下-->
    <jpa:repositories base-package="com.sssp"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>

</beans>